# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

resources:
 repositories:
   - repository: WzComparerR2
     type: github
     name: kagamia/WzComparerR2
     endpoint: Kagamia
   - repository: CharaSimResource
     type: github
     name: kagamia/CharaSimResource
     endpoint: Kagamia

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'WzComparerR2/WzComparerR2.sln'
  buildPlatform_anycpu: 'Any CPU'
  buildPlatform_x86: 'x86'
  buildConfiguration: 'Release'
  outputDir_anycpu: 'WzComparerR2/WzComparerR2/bin/release'
  outputDir_x86: 'WzComparerR2/WzComparerR2/bin/x86/release'
  outputFileName: 'WcR2_With_Plguins_$(Build.BuildNumber)'

steps:
- checkout: WzComparerR2
  persistCredentials: true
- checkout: CharaSimResource

- task: CmdLine@2
  inputs:
    script: |
      mkdir Build
      echo [assembly: global::System.Reflection.AssemblyInformationalVersion("2.1.$(Build.BuildNumber)")] >> Build\CommonAssemblyInfo.cs
    workingDirectory: '$(Build.SourcesDirectory)\WzComparerR2'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform_anycpu)'
    configuration: '$(buildConfiguration)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform_x86)'
    configuration: '$(buildConfiguration)'

- task: CmdLine@2
  inputs:
    script: |
      move "$(outputDir_anycpu)\*.dll" "$(outputDir_anycpu)\Lib"
      del "$(outputDir_anycpu)\*.pdb"
      rename "$(outputDir_anycpu)\WzComparerR2.exe" "WzComparerR2.anycpu.exe"
      rename "$(outputDir_anycpu)\WzComparerR2.exe.config" "WzComparerR2.anycpu.exe.config"
      copy /y "$(outputDir_x86)\WzComparerR2.exe" "$(outputDir_anycpu)"
      copy /y "$(outputDir_x86)\WzComparerR2.exe.config" "$(outputDir_anycpu)"
    failOnStderr: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(outputDir_anycpu)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(outputFileName).zip'
    replaceExistingArchive: true

- task: GitHubRelease@1
  continueOnError: true
  displayName: Delete last build.
  inputs:
    gitHubConnection: 'Kagamia'
    repositoryName: '$(Build.Repository.Name)'
    action: 'delete'
    tag: 'ci-build'

- task: CmdLine@2
  continueOnError: true
  displayName: Delete ci-build tag.
  inputs:
    script: 'git push --delete origin ci-build'
    workingDirectory: '$(Build.SourcesDirectory)\WzComparerR2'
    failOnStderr: false

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'Kagamia'
    repositoryName: '$(Build.Repository.Name)'
    action: 'edit'
    target: '$(Build.SourceVersion)'
    tag: 'ci-build'
    title: 'CI-Build-$(Build.BuildNumber)'
    releaseNotesSource: 'inline'
    releaseNotesInline: 'Automation build from azure-pipeline.'
    isPreRelease: true
    addChangeLog: false
